<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Opsec on PysKa's Writeups</title><link>https://pyska-ratzinger.github.io/categories/opsec/</link><description>Recent content in Opsec on PysKa's Writeups</description><generator>Hugo</generator><language>en-us</language><managingEditor>ricardojorge512@hotmail.com (PysKa Ratzinger)</managingEditor><webMaster>ricardojorge512@hotmail.com (PysKa Ratzinger)</webMaster><lastBuildDate>Thu, 18 May 2023 15:40:00 +0000</lastBuildDate><atom:link href="https://pyska-ratzinger.github.io/categories/opsec/index.xml" rel="self" type="application/rss+xml"/><item><title>Jail your binaries (with chroot).</title><link>https://pyska-ratzinger.github.io/posts/2023-04-23-jail-your-binaries/</link><pubDate>Sun, 23 Apr 2023 12:46:38 +0000</pubDate><author>ricardojorge512@hotmail.com (PysKa Ratzinger)</author><guid>https://pyska-ratzinger.github.io/posts/2023-04-23-jail-your-binaries/</guid><description>The why. You may have a binary you want to analyze it&amp;rsquo;s behaviour, but great efforts are required for reverse engineering. In that case, you may want to run the binary instead, but that comes at the risk of potentially infecting your computer.
That&amp;rsquo;s where the jail comes in. You create an environment which the binary cannot escape, and which has no connection to the rest of your system, and run it there.</description></item></channel></rss>